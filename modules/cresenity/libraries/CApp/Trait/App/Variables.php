<?php

/**
 * Description of Variables
 *
 * @author Hery
 */
trait CApp_Trait_App_Variables {

    /**
     *
     * @var array
     */
    protected static $variables;

    /**
     * return all variables generated by CApp for used in js var capp
     * 
     * @return array
     */
    public static function variables() {
        $variables = array();
        $variables['decimal_separator'] = ccfg::get('decimal_separator') === null ? '.' : ccfg::get('decimal_separator');
        $variables['decimalSeparator'] = ccfg::get('decimal_separator') === null ? '.' : ccfg::get('decimal_separator');
        $variables['thousand_separator'] = ccfg::get('thousand_separator') === null ? ',' : ccfg::get('thousand_separator');
        $variables['thousandSeparator'] = ccfg::get('thousand_separator') === null ? ',' : ccfg::get('thousand_separator');
        $variables['decimal_digit'] = ccfg::get('decimal_digit') === null ? '0' : ccfg::get('decimal_digit');
        $variables['decimalDigit'] = ccfg::get('decimal_digit') === null ? '0' : ccfg::get('decimal_digit');
        $variables['have_clock'] = ccfg::get('have_clock') === null ? false : ccfg::get('have_clock');
        $variables['haveClock'] = ccfg::get('have_clock') === null ? false : ccfg::get('have_clock');
        $variables['have_scroll_to_top'] = ccfg::get('have_scroll_to_top') === null ? true : ccfg::get('have_scroll_to_top');
        $variables['haveScrollToTop'] = ccfg::get('have_scroll_to_top') === null ? true : ccfg::get('have_scroll_to_top');
        $variables['CFVersion'] = CF::version();
        $variables['domain'] = CF::domain();
        $variables['appCode'] = CF::appCode();
        $variables['appId'] = CF::appId();

        $bootstrap = ccfg::get('bootstrap');
        $themeData = CManager::instance()->getThemeData();
        if (isset($themeData) && strlen(carr::get($themeData, 'bootstrap')) > 0) {
            $bootstrap = carr::get($themeData, 'bootstrap');
        }

        if (strlen($bootstrap) == 0) {
            $bootstrap = '2.3';
        }
        $variables['bootstrap'] = $bootstrap;

        $variables['base_url'] = curl::base();
        $variables['baseUrl'] = curl::base();
        $variables['label_confirm'] = clang::__("Are you sure ?");
        $variables['labelConfirm'] = clang::__("Are you sure ?");
        $variables['label_ok'] = clang::__("OK");
        $variables['labelOk'] = clang::__("OK");
        $variables['label_cancel'] = clang::__("Cancel");
        $variables['labelCancel'] = clang::__("Cancel");

        $asset = CManager::asset();
        $variables['requireJs'] = $asset->isUseRequireJs();
        if (!$asset->isUseRequireJs()) {


            $variables['requireJs'] = false;


            //we collect all client modules data
            $allModules = CManager::asset()->module()->allModules();
            $variables['modules'] = $allModules;
            $variables['theme'] = array();
            $variables['theme']['name'] = CManager::theme()->getCurrentTheme();
            $variables['theme']['data'] = CManager::theme()->getThemeData();

            $variables['jsUrl'] = CManager::asset()->getAllJsFileUrl();

            $variables['defaultJQueryUrl'] = curl::base() . 'media/js/libs/jquery-3.3.1/jquery-3.3.1.min.js';
        }
        if (is_array(static::$variables)) {
            $variables = array_merge($variables, static::$variables);
        }
        return $variables;
    }

    /**
     * Alias of variables
     * @return array
     * @see CApp_Trait_App_Variables::variables()
     */
    public static function getVariables() {
        return static::variables();
    }

    /**
     * 
     * @param string $key
     * @param mixed $value
     * @return void
     */
    public static function setVariable($key, $value) {
        if (static::$variables == null) {
            static::$variables = [];
        }
        static::$variables[$key] = $value;
    }

}

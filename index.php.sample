<?php

if (!defined('CURL_SSLVERSION_TLSv1_2')) {
    define('CURL_SSLVERSION_TLSv1_2', 6);
}

//auto redirect non www
$pageURL = (@$_SERVER["HTTPS"] == "on") ? "https://" : "http://";

if (substr($_SERVER['SERVER_NAME'], 0, 4) === 'www.') {
    if ($_SERVER["SERVER_PORT"] != "80") {
        $pageURL .= substr($_SERVER['SERVER_NAME'], 4) . ":" . $_SERVER["SERVER_PORT"] . $_SERVER["REQUEST_URI"];
    } else {
        $pageURL .= substr($_SERVER['SERVER_NAME'], 4) . $_SERVER["REQUEST_URI"];
    }
    header('Location: ' . $pageURL);
    exit;
}


if (isset($_GET['kc']) && isset($_GET['msisdn']) && isset($_GET['price'])) {
    header('HTTP/1.0 503 Service Unavailable');
    header('Content-Type: text/html');
    header("Retry-After: 3600");
    header('Content-Type: text/html');
    echo "<html><body><p><b>Server under undue load</b><br />";
    echo "Please wait 1 hours before retrying.</p></body></html>";
    exit;
}

if (!isset($_GET['force-nobot'])) {
    if (isset($_SERVER['HTTP_USER_AGENT']) && preg_match('/bot|crawl|slurp|spider|mediapartners/i', $_SERVER['HTTP_USER_AGENT'])) {
        //bot detected
        $allow = false;

        if (isset($_SERVER['PHP_SELF']) AND $_SERVER['PHP_SELF'] AND $_SERVER['PHP_SELF'] == '/index.php/check') {
            $allow = true;
        }
        if (preg_match('/Googlebot/i', $_SERVER['HTTP_USER_AGENT'])) {
            $allow = true;
        }
        if (!$allow) {

            //$logText = '';
            //$logText .= 'SERVER:' . json_encode($_SERVER) . PHP_EOL;
            //file_put_contents('botlog.log', $logText);
            header('HTTP/1.0 503 Service Unavailable');
            header('Content-Type: text/html');
            header("Retry-After: 3600");
            header('Content-Type: text/html');
            echo "<html><body><p><b>Server under undue load</b><br />";
            echo "Please wait 1 hours before retrying.</p></body></html>";
            exit;
        }
    }
}

date_default_timezone_set('Asia/Jakarta');
define('DS', DIRECTORY_SEPARATOR);


define('IN_PRODUCTION', FALSE);

/**
 * Website application directory. This directory should contain your application
 * configuration, controllers, models, views, and other resources.
 *
 * This path can be absolute or relative to this file.
 */
$cf_application = 'application';

/**
 * CF modules directory. This directory should contain all the modules used
 * by your application. Modules are enabled and disabled by the application
 * configuration file.
 *
 * This path can be absolute or relative to this file.
 */
$cf_modules = 'modules';

/**
 * CF system directory. This directory should contain the core/ directory,
 * and the resources you included in your download of CF.
 *
 * This path can be absolute or relative to this file.
 */
$cf_system = 'system';

/**
 * Test to make sure that CF is running on PHP 5.2 or newer. Once you are
 * sure that your environment is compatible with CF, you can comment this
 * line out. When running an application on a new server, uncomment this line
 * to check the PHP version quickly.
 */
version_compare(PHP_VERSION, '5.2', '<') and exit('CF requires PHP 5.2 or newer.');

/**
 * Set the error reporting level. Unless you have a special need, E_ALL is a
 * good level for error reporting.
 */
error_reporting(E_ALL & ~E_STRICT ^ E_DEPRECATED);

if (isset($_COOKIE['use_strict'])) {
    error_reporting(E_ALL);
}

/**
 * Turning off display_errors will effectively disable CF error display
 * and logging. You can turn off CF errors in application/config/config.php
 */
ini_set('display_errors', TRUE);

/**
 * If you rename all of your .php files to a different extension, set the new
 * extension here. This option can left to .php, even if this file has a
 * different extension.
 */
define('EXT', '.php');

//
// DO NOT EDIT BELOW THIS LINE, UNLESS YOU FULLY UNDERSTAND THE IMPLICATIONS.
// ----------------------------------------------------------------------------
// $Id: index.php 3915 2009-01-20 20:52:20Z zombor $
//
if (isset($_FILES) && is_array($_FILES)) {
    foreach ($_FILES as $k => $v) {
        if (isset($v['name'])) {
            $t = $v['name'];

            if (!is_array($t)) {
                $t = array($t);
            }
            foreach ($t as $g) {
                if (!is_array($g)) {
                    $ext = pathinfo($g, PATHINFO_EXTENSION);
                    if ($ext == 'php' || $ext == 'sh') {
                       die('Not Allowed X_X');
                    }
                } else {
                    foreach ($g as $h) {

                        if (!is_array($h)) {
                            $ext = pathinfo($h, PATHINFO_EXTENSION);
                            if ($ext == 'php' || $ext == 'sh') {
                               die('Not Allowed X_X');
                            }
                        }
                    }

                }
            }
        }
    }
}

$cf_pathinfo = pathinfo(__FILE__);
// Define the front controller name and docroot
define('DOCROOT', $cf_pathinfo['dirname'] . DIRECTORY_SEPARATOR);
define('KOHANA', $cf_pathinfo['basename']);

// If the front controller is a symlink, change to the real docroot
is_link(KOHANA) and chdir(dirname(realpath(__FILE__)));

//we get app code from here
$file = DOCROOT . 'data' . DIRECTORY_SEPARATOR . 'domain' . DIRECTORY_SEPARATOR;
if (PHP_SAPI === 'cli') {
    // Command line requires a bit of hacking
    if (isset($_SERVER['argv'][2])) {
        $domain = $_SERVER['argv'][2];
    }
} else {
    $domain = $_SERVER["SERVER_NAME"];
}
$file .= $domain . '.php';


if (file_exists($file)) {
    $content = file_get_contents($file);
    $data = json_decode($content, true);
    $app_code = $data['app_code'];

    $cf_application = 'application' . DIRECTORY_SEPARATOR . $app_code;
}

// If kohana folders are relative paths, make them absolute.
$cf_application = file_exists($cf_application) ? $cf_application : DOCROOT . $cf_application;
$cf_modules = file_exists($cf_modules) ? $cf_modules : DOCROOT . $cf_modules;
$cf_system = file_exists($cf_system) ? $cf_system : DOCROOT . $cf_system;

// Define application and system paths
define('APPPATH', str_replace('\\', '/', realpath($cf_application)) . '/');
define('MODPATH', str_replace('\\', '/', realpath($cf_modules)) . '/');
define('SYSPATH', str_replace('\\', '/', realpath($cf_system)) . '/');

// Clean up
unset($cf_application, $cf_modules, $cf_system);

require SYSPATH . 'core/Bootstrap' . EXT;

let File = require('../File');
let path = require('path');

class MockEntryPlugin {
    /**
     * @param {import('../CF')} cf
     */
    constructor(cf) {
        this.cf = cf || global.CF;
    }

    /**
     * Handle the deletion of the temporary cf.js
     * output file that was generated by webpack.
     *
     * This file is created when the user hasn't
     * requested any JavaScript compilation, but
     * webpack still requires an entry.
     *
     * @param {import("webpack").Compiler} compiler
     */
    apply(compiler) {
        compiler.hooks.done.tap('MockEntryPlugin', stats => {
            let temporaryOutputFile = stats
                .toJson()
                .assets.find(asset => asset.name === 'cf.js');

            if (temporaryOutputFile) {
                delete stats.compilation.assets[temporaryOutputFile.name];

                File.find(
                    path.resolve(this.cf.config.publicPath, temporaryOutputFile.name)
                ).delete();
            }
        });
    }
}

module.exports = MockEntryPlugin;
